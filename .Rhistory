library(arrow)
library(tidyverse)
library(magrittr)
?s3_bucket
bucket <- arrow::s3_bucket("mco-mesonet")
bucket
arrow::open_dataset(bucket)
?open_dataset
?s3_bucket
system("aws sts get-caller-identity")
install.packages("duckdb")
library(duckdb)
con <- dbConnect(duckdb::duckdb())
df <- dbGetQuery(con, "
SELECT * FROM read_parquet('s3://mco-mesonet/air-quality/', hive_partitioning=true)
WHERE station = 'acebirne'
")
?duckdb
db <- duckdb::duckdb()
db
dbGetQuery(con, "INSTALL httpfs")
system("aws sso login --profile umt-sso")
bucket <- arrow::s3_bucket("mco-mesonet")
arrow::open_dataset(bucket)
open_dataset("s3://mco-mesonet/air-quality/", format = "parquet")
bucket <- arrow::s3_bucket("mco-mesonet")
bucket
open_dataset(bucket)
data <- arrow::open_dataset("s3://mco-mesonet/air-quality/", format = "parquet")
data <-
arrow::open_dataset("s3://mco-mesonet/air-quality/", format = "parquet")
arrow::open_dataset("s3://mco-mesonet/", format = "parquet")
arrow::open_dataset("s3://mco-mesonet/air-quality/", format = "parquet")
arrow::open_dataset("s3://mco-mesonet/air-quality/")
arrow::open_dataset("s3://mco-mesonet/air-quality/") %>%
dplyr::filter(station == "mcolubre")
arrow::open_dataset("s3://mco-mesonet/air-quality/") %>%
dplyr::filter(station == "mcolubre") %>%
dplyr::collect()
df <- dbGetQuery(con, "
SELECT * FROM read_parquet('s3://mco-mesonet/air-quality/', hive_partitioning=true)
WHERE station = 'acebirne'
")
con <- dbConnect(duckdb::duckdb())
df <- dbGetQuery(con, "
SELECT * FROM read_parquet('s3://mco-mesonet/air-quality/', hive_partitioning=true)
WHERE station = 'acebirne'
")
library(duckplyr)
pak::pak("duckplyr")
library(duckplyr)
db_exec("INSTALL httpfs")
db_exec("LOAD httpfs")
df <- dbGetQuery(con, "
SELECT * FROM read_parquet('s3://mco-mesonet/air-quality/', hive_partitioning=true)
WHERE station = 'acebirne'
")
read_parquet_duckdb("s3://mco-mesonet/air-quality/")
?read_parquet_duckdb
read_parquet_duckdb("s3://mco-mesonet/air-quality/*")
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet")
dbGetQuery(con, "
SELECT * FROM read_parquet('s3://mco-mesonet/air-quality/*', hive_partitioning=true)
WHERE station = 'acebirne'
")
?duckdb_register_arrow
arrow::open_dataset("s3://mco-mesonet/air-quality/") %>%
dplyr::filter(station == "mcolubre") %>%
dplyr::collect()
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet") %>%
dplyr::filter(station == "mcolubre") %>%
dplyr::collect()
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
union_by_name=TRUE) %>%
dplyr::filter(station == "mcolubre") %>%
dplyr::collect()
?read_parquet_duckdb
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list("union_by_name=True"))
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True"))
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True")) %>%
dplyr::filter(station == "mcolubre") %>%
dplyr::collect()
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True")) %>%
dplyr::filter(station == "mcolubre") %>%
dplyr::collect()
arrow::open_dataset("s3://mco-mesonet/air-quality/") %>%
dplyr::filter(station == "mcolubre") %>%
dplyr::collect()
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True")) %>%
dplyr::filter(station == "mcolubre") %>%
dplyr::collect()
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True")) %>%
dplyr::filter(station == "mcolubre") %>%
dplyr::collect()
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True")) %>%
dplyr::filter(station == "mcolubre") %>%
dplyr::select(station, time_stamp, pm2.5_atm_a, pm2.5_atm_b) %>%
dplyr::collect()
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True")) %>%
# dplyr::filter(station == "mcolubre") %>%
dplyr::select(station, time_stamp, pm2.5_atm_a, pm2.5_atm_b) %>%
dplyr::collect()
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True")) %>%
# dplyr::filter(station == "mcolubre") %>%
dplyr::select(station, time_stamp, pm2.5_atm_a, pm2.5_atm_b) %>%
dplyr::group_by(station) %>%
dplyr::summarise(dplyr::across(pm2.5_atm_a:pm2.5_atm_b, \(x){mean(x, na.rm = TRUE)})) %>%
dplyr::collect()
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True")) %>%
# dplyr::filter(station == "mcolubre") %>%
dplyr::select(station, time_stamp, pm2.5_atm_a, pm2.5_atm_b) %>%
dplyr::group_by(station) %>%
dplyr::summarise(dplyr::across(pm2.5_atm_a:pm2.5_atm_b, \(x){mean(x, na.rm = TRUE)})) %>%
dplyr::collect()
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True")) %>%
# dplyr::filter(station == "mcolubre") %>%
dplyr::select(station, time_stamp, pm2.5_atm_a, pm2.5_atm_b) %>%
dplyr::group_by(station) %>%
# dplyr::summarise(dplyr::across(pm2.5_atm_a:pm2.5_atm_b, \(x){mean(x, na.rm = TRUE)})) %>%
dplyr::collect()
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True")) %>%
# dplyr::filter(station == "mcolubre") %>%
dplyr::select(station, time_stamp, pm2.5_atm_a, pm2.5_atm_b) %>%
dplyr::group_by(station) %>%
dplyr::summarise(dplyr::across(pm2.5_atm_a:pm2.5_atm_b, \(x){mean(x, na.rm = TRUE)})) %>%
dplyr::collect()
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True",
hive_partitioning="True"))
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True",
hive_partitioning="True")) %>%
# dplyr::filter(station == "mcolubre") %>%
dplyr::select(station, time_stamp, pm2.5_atm_a, pm2.5_atm_b) %>%
dplyr::group_by(station) %>%
dplyr::summarise(dplyr::across(pm2.5_atm_a:pm2.5_atm_b, \(x){mean(x, na.rm = TRUE)})) %>%
dplyr::collect()
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True",
hive_partitioning="True")) %>%
dplyr::filter(station == "mcolubre") %>%
dplyr::select(station, time_stamp, pm2.5_atm_a, pm2.5_atm_b) %>%
dplyr::group_by(station) %>%
dplyr::summarise(dplyr::across(pm2.5_atm_a:pm2.5_atm_b, \(x){mean(x, na.rm = TRUE)})) %>%
dplyr::collect()
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True",
hive_partitioning="True")) %>%
dplyr::filter(station == "mcolubre") %>%
dplyr::select(station, time_stamp, pm2.5_atm_a, pm2.5_atm_b) %>%
dplyr::group_by(station) %>%
dplyr::summarise(dplyr::across(pm2.5_atm_a:pm2.5_atm_b, \(x){mean(x, na.rm = TRUE)}))
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True",
hive_partitioning="True")) %>%
dplyr::filter(station == "mcolubre") %>%
dplyr::select(station, time_stamp, pm2.5_atm_a, pm2.5_atm_b) %>%
dplyr::group_by(station)
?read_parquet_duckdb
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True",
hive_partitioning="True"),
prudence = "stingy") %>%
dplyr::filter(station == "mcolubre") %>%
dplyr::select(station, time_stamp, pm2.5_atm_a, pm2.5_atm_b) %>%
dplyr::group_by(station) %>%
dplyr::summarise(dplyr::across(pm2.5_atm_a:pm2.5_atm_b, \(x){mean(x, na.rm = TRUE)}))
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True",
hive_partitioning="True"),
prudence = "stingy") %>%
dplyr::filter(station == "mcolubre") %>%
dplyr::select(station, time_stamp, pm2.5_atm_a, pm2.5_atm_b) %>%
dplyr::summarise(dplyr::across(pm2.5_atm_a:pm2.5_atm_b, \(x){mean(x, na.rm = TRUE)}),
.by = station)
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True",
hive_partitioning="True"),
prudence = "stingy") %>%
dplyr::filter(station == "mcolubre") %>%
dplyr::select(station, time_stamp, pm2.5_atm_a, pm2.5_atm_b) %>%
dplyr::summarise(dplyr::across(pm2.5_atm_a:pm2.5_atm_b, mean}),
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True",
hive_partitioning="True"),
prudence = "stingy") %>%
dplyr::filter(station == "mcolubre") %>%
dplyr::select(station, time_stamp, pm2.5_atm_a, pm2.5_atm_b) %>%
dplyr::summarise(dplyr::across(pm2.5_atm_a:pm2.5_atm_b, mean),
.by = station)
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True",
hive_partitioning="True"),
prudence = "stingy") %>%
dplyr::filter(station == "mcolubre") %>%
dplyr::select(station, time_stamp, pm2.5_atm_a, pm2.5_atm_b) %>%
dplyr::summarise(dplyr::across(pm2.5_atm_a:pm2.5_atm_b, mean),
.by = station) %>%
dplyr::collect()
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True",
hive_partitioning="True"),
prudence = "stingy") %>%
dplyr::filter(station == "mcolubre") %>%
dplyr::select(station, time_stamp, pm2.5_atm_a, pm2.5_atm_b)
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True",
hive_partitioning="True"),
prudence = "stingy")
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True",
hive_partitioning="True")) %>%
dplyr::filter(station == "mcolubre") %>%
dplyr::select(station, time_stamp, pm2.5_atm_a, pm2.5_atm_b) %>%
dplyr::summarise(dplyr::across(pm2.5_atm_a:pm2.5_atm_b, mean),
.by = station)
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True",
hive_partitioning="True")) %>%
dplyr::filter(station == "mcolubre")
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True",
hive_partitioning="True")) %>%
dplyr::filter(station == "mcolubre") %>%
dplyr::select(station, time_stamp, pm2.5_atm_a, pm2.5_atm_b)
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True",
hive_partitioning="True")) %>%
dplyr::filter(station == "mcolubre") %>%
dplyr::select(station, time_stamp, pm2.5_atm_a, pm2.5_atm_b) %>%
dplyr::summarise(dplyr::across(pm2.5_atm_a:pm2.5_atm_b, mean),
.by = station)
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True",
hive_partitioning="True")) %>%
# dplyr::filter(station == "mcolubre") %>%
dplyr::select(station, time_stamp, pm2.5_atm_a, pm2.5_atm_b) %>%
dplyr::summarise(dplyr::across(pm2.5_atm_a:pm2.5_atm_b, mean),
.by = station)
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True",
hive_partitioning="True")) %>%
dplyr::filter(station == "mcolubre") %>%
dplyr::select(station, time_stamp, pm2.5_atm_a, pm2.5_atm_b) %>%
dplyr::summarise(dplyr::across(pm2.5_atm_a:pm2.5_atm_b, mean),
.by = station) %>%
dplyr::collect()
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True",
hive_partitioning="True"))
arrow::open_dataset("s3://mco-mesonet/air-quality/")
?open_dataset
arrow::open_dataset("s3://mco-mesonet/air-quality/",
format = "parquet",
factory_options = list(exclude_invalid_files = TRUE))
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True",
hive_partitioning="True"))
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True",
hive_partitioning="True")) %>%
dplyr::filter(station == "mcolubre") %>%
dplyr::select(station, time_stamp, pm2.5_atm_a, pm2.5_atm_b)
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True",
hive_partitioning="True")) %>%
dplyr::filter(station == "mcolubre") %>%
dplyr::select(station, time_stamp, pm2.5_atm_a, pm2.5_atm_b) %>%
# dplyr::summarise(dplyr::across(pm2.5_atm_a:pm2.5_atm_b, mean),
#                  .by = station) %>%
dplyr::collect()
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True",
hive_partitioning="True")) %>%
# dplyr::filter(station == "mcolubre") %>%
dplyr::select(station, time_stamp, pm2.5_atm_a, pm2.5_atm_b) %>%
# dplyr::summarise(dplyr::across(pm2.5_atm_a:pm2.5_atm_b, mean),
#                  .by = station) %>%
dplyr::collect()
read_parquet_duckdb("s3://mco-mesonet/air-quality/*/*/*.parquet",
options = list(union_by_name="True",
hive_partitioning="True"))
